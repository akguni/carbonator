version: "3.9"

x-database-variables: &database-variables
    POSTGRES_DB: ${POSTGRES_DB}
    POSTGRES_USER: ${POSTGRES_USER}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

x-app-variables: &app-variables
    <<: *database-variables
    POSTGRES_HOST: postgres
    SECRET_KEY: ${SECRET_KEY}

services:
    website:
        build:
            dockerfile: Dockerfile-website
            context: .
            args:
                APP_HOME: ${APP_HOME}
        image: carbonator:latest
        container_name: django_image
        command: >
            bash -c "
            python manage.py migrate &&
            python manage.py collectstatic --noinput &&
            uwsgi capstone.ini
            "
        volumes:
            - static-volume:${APP_HOME}/static

        environment: *app-variables
        
        depends_on:
            postgres:
                condition: service_healthy

    postgres:
        build:
            dockerfile: Dockerfile-postgres
            context: .
        image: postgres:latest
        container_name: postgres_image
        environment: *database-variables

        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U carbonator"]
            interval: 10s
            timeout: 5s
            retries: 5

        volumes:
            - db-data:/var/lib/postgresql/data

    nginx:
        build:
            dockerfile: Dockerfile-nginx
            context: .
        image: nginx:latest
        container_name: nginx_image
        restart: always

        volumes:
            - static-volume:${APP_HOME}/static
            
        ports:
            - 8080:80
        depends_on:
                - website

volumes:
    db-data:
    static-volume: